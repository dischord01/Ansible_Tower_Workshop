# file: roles/aws.infra.ansible/tasks/aws_infra_create.yml
---
#---------------------------------------------------
#  VPC
#---------------------------------------------------
- name: Create a AWS VPC with a public subnet
  ec2_vpc:
    state: present
    cidr_block: "{{ cidr_block }}"
    resource_tags: "{{ vpc_resource_tags }}"
    subnets: "{{ vpc_subnets }}"       
    route_tables: "{{ route_tables }}"
    region: "{{ region }}"
    internet_gateway: true
    wait: yes
  register: vpc

#---------------------------------------------------
#  Security Group
#---------------------------------------------------
- name: Create Tower security group
  ec2_group:
    name: ansible_tower_sg
    description: Ansible Tower Securiy Group
    region: "{{ region }}"
    vpc_id: "{{ vpc.vpc_id }}"
    rules: "{{ ansible_tower_sg_rules }}"
  register: tower_sec_group
  tags:
    - vpc_create

#---------------------------------------------------
#  SSH Key
#---------------------------------------------------
- name: Create EC2 keypair
  ec2_key: name="{{ tower_keypair }}" region="{{ region }}"
  register: ec2_key
  tags:
    - vpc_create

- debug: var=ec2_key

- name: Create ssh keypair
  copy: content="{{ ec2_key.key.private_key }}"
        dest="{{ ssh_key_path }}/{{ tower_keypair }}"
        mode=0400
  tags:
    - vpc_create

#---------------------------------------------------
#  EC2 
#---------------------------------------------------
- name: Launch Tower Instance
  ec2:
    wait: yes
    exact_count: 1
    region: "{{ region }}"
    image: "{{ tower_ami }}"
    key_name: "{{ tower_keypair }}"
    group_id: "{{ tower_sec_group.group_id }}"
    instance_type: "{{ tower_instance_type }}"
    assign_public_ip: "{{ tower_public_ip }}"
    volumes:
      - device_name: /dev/xvda
        volume_type: gp2
        volume_size: 8
        delete_on_termination: true
    count_tag:
      Name: "{{ tower_instance_tag }}"
    instance_tags:
      Name: "{{ tower_instance_tag }}"
      StopGroup: "OfficeHoursTerminator"
      DeleteTag: "ATW"
    vpc_subnet_id: "{{ vpc.subnets[0].id }}"
  register: tower_instance
  tags:
    - vpc_create

- debug: var=tower_instance

- name: Wait for instance to become available
  wait_for: 
    host: "{{ tower_instance.tagged_instances.0.public_ip }}"
    port: 22 
    search_regex: OpenSSH 
    timeout: 320 
    state: started
  tags:
    - vpc_create