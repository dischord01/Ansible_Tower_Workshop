{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "QS(0022) Creates Ansible Tower on [RHEL7] with Clients Tagged for Mangement",
    "Parameters": {
        "KeyPairName": {
            "Description": "Public/private key pair",
            "Type": "AWS::EC2::KeyPair::KeyName",
            "Default": "Ansible"
        },
        "AnsibleTowerIP": {
            "Description": "IP for the ansible master",
            "Type": "String",
            "Default": "10.0.0.10"
        },
        "AnsibleAdminPassword": {
            "Description": "Password for Ansible Admin Must be at least 8 characters containing letters and (minimum 1 capital letter), numbers and symbols",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "32",
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho": "true",
            "Default": "Ansible123!"
        },
        "DatabaseAdminPassword": {
            "Description": "Password for Ansible Admin Must be at least 8 characters containing letters and (minimum 1 capital letter), numbers and symbols",
            "Type": "String",
            "MinLength": "8",
            "MaxLength": "32",
            "AllowedPattern": "(?=^.{6,255}$)((?=.*\\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*",
            "NoEcho": "true",
            "Default": "Ansible123!"
        },
        "AnsibleClientLinuxIP": {
            "Description": "IP for the ansible client",
            "Type": "String",
            "Default": "10.0.0.11"
        },
        "AnsibleTowerInstanceType": {
            "Description": "Amazon EC2 instance type for the Config Server",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.micro",
                "t2.medium",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ]
        },
        "LinuxClientInstanceType": {
            "Description": "Amazon EC2 instance type for the Linux Client.",
            "Type": "String",
            "Default": "t2.medium",
            "AllowedValues": [
                "t2.micro",
                "t2.medium",
                "m3.medium",
                "m3.large",
                "m3.xlarge",
                "m3.2xlarge",
                "c3.large",
                "c3.xlarge",
                "c3.2xlarge",
                "c3.4xlarge",
                "c3.8xlarge",
                "r3.large",
                "r3.xlarge",
                "r3.2xlarge",
                "r3.4xlarge",
                "r3.8xlarge",
                "i2.xlarge",
                "i2.2xlarge",
                "i2.4xlarge",
                "i2.8xlarge"
            ]
        },
        "SubnetCIDR": {
            "Description": "CIDR Block for the Public Subnet",
            "Type": "String",
            "Default": "10.0.0.0/19",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        },
        "RemoteAdminCIDR": {
            "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
            "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x",
            "Description": "Allowed CIDR block for external SSH access Note: a value of 0.0.0.0/0 will allow access from ANY ip address",
            "Type": "String",
            "Default": "0.0.0.0/0"
        },
        "VPCCIDR": {
            "Description": "CIDR Block for the VPC",
            "Type": "String",
            "Default": "10.0.0.0/16",
            "AllowedPattern": "[a-zA-Z0-9]+\\..+"
        }
    },
    "Resources": {
        "VPCStack": {
            "Type": "AWS::CloudFormation::Stack",
            "Properties": {
                "TemplateURL": "https://s3.amazonaws.com/quickstart-reference/ansible/latest/templates/Ansible-Tower-el7-VPC.template",
                "Parameters": {
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "SubnetCIDR": {
                        "Ref": "SubnetCIDR"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        },
        "Ec2Stack": {
            "Type": "AWS::CloudFormation::Stack",
            "DependsOn": "VPCStack",
            "Properties": {
                "TemplateURL": "https://s3.amazonaws.com/quickstart-reference/ansible/latest/templates/Ansible-Tower-el7-Ec2.template",
                "Parameters": {
                    "KeyPairName": {
                        "Ref": "KeyPairName"
                    },
                    "SubnetId": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.SubnetId"
                        ]
                    },
                    "VPC": {
                        "Fn::GetAtt": [
                            "VPCStack",
                            "Outputs.VPC"
                        ]
                    },
                    "RemoteAdminCIDR": {
                        "Ref": "RemoteAdminCIDR"
                    },
                    "AnsibleAdminPassword": {
                        "Ref": "AnsibleAdminPassword"
                    },
                    "DatabaseAdminPassword": {
                        "Ref": "DatabaseAdminPassword"
                    },
                    "AnsibleTowerIP": {
                        "Ref": "AnsibleTowerIP"
                    },
                    "AnsibleClientLinuxIP": {
                        "Ref": "AnsibleClientLinuxIP"
                    },
                    "VPCCIDR": {
                        "Ref": "VPCCIDR"
                    }
                }
            }
        }
    }
}